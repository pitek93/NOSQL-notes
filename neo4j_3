    1  apt-get install java
    2  java -version
    3  java --version
    4  apt-get install default-java
    5  apt-get install default-jre
    6  java
    7  java -version
    8  wget --no-check-certificate -O - https://debian.neo4j.org/neotechnology.gpg.key | sudo apt-key add -
    9  echo 'deb http://debian.neo4j.org/repo stable/' | sudo tee /etc/apt/sources.list.d/neo4j.list
   10  sudo apt install neo4j
   11  sudo apt update
   12  sudo apt install default-jre default-jre-headless
   13  apt-get install default-jre
   14  FROM ubuntu:15.04
   15  MAINTAINER Ivan Krizsan, https://github.com/krizsan
   16  RUN apt-get update &&      apt-get upgrade -y &&      apt-get install -y  software-properties-common &&      add-apt-repository ppa:webupd8team/java -y &&      apt-get update &&      echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections &&      apt-get install -y oracle-java8-installer &&      apt-get clean
   17  apt-get install -y oracle-java8-installer
   18  sudo docker comit 254eec0fa746 bazy
   19  sudo docker commit 254eec0fa746 bazy
   20  apt-get install default-jre
   21  apt-get update
   22  apt-get install default-jre
   23  wget https://neo4j.com/artifact.php?name=neo4j-community-3.3.1-unix.tar.gz
   24  tar -xf artifact.php\?name\=neo4j-community-3.3.1-unix.tar.gz 
   25  ls
   26  cd neo4j-community-3.3.1/
   27  ls
   28  cd bin
   29  ls
   30  ./neo4j start
   31  ls
   32  cd ..
   33  ls
   34  cd conf
   35  ls
   36  vim neo4j.conf 
   37  vi neo4j.conf 
   38  apt-get install vim
   39  vi neo4j.conf 
   40  cd ..
   41  pwd
   42  cd bin
   43  ls
   44  ./neo4j start
   45  cd ..
   46  ls
   47  cd conf
   48  ls
   49  vi neo4j.conf 
   50  history

CREATE(:Osoba(Imie:"Piotr", Nazwisko:"Michalski"))

MATCH(ja:Osoba {nazwisko:"meina:}), (pijawski:{naziwsko:"Pijawski"} return ja,pijawski
CREATE(ja)-[:Uczy]->(pijawski)

MATCH(from)-[rel](

MATCH(m:Osoba {nazwisko:"Meina"}), (others:Osoba)  CREATE(m)-[:UCZY]->(others);

MATCH (P:Osoba)->[r:Uczy]->(p2) return p, r, p2;

MATCH (uczaca:Osoba)->[uczona:Uczy]->(p2) return p, r, p2;

MATCH(uczaca:Osoba-[:UCZY]->(uczona:Osoba)-[:Meczy]->(meczona:Osoba) return uczaca, meczona;



http://158.75.104.201:7474/browser/
alamakota
















